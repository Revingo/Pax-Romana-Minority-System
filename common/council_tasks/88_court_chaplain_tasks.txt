task_conversion = {
	position = councillor_court_chaplain

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_value
	task_current_value = scope:councillor_liege.current_faith_value
	task_max_value = 100
	highlight_own_realm = yes

	effect_desc = {
		desc = task_conversion_effect_desc
		triggered_desc = {
			trigger = {
				scope:councillor_liege = {
					any_vassal = {
						has_vassal_stance = minority
					}
				}
			}
			desc = minority_disapproves_conversion_tooltip
		}
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_conversion_opinion_gain
			}
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_conversion_development_gain
			}
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_conversion_levy_gain
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_conversion_resistance_to_conversion
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_conversion_opinion_loss
			}
		}
	}

	potential_county = { 
		scope:county = {
			custom_description = {
				text = "no_other_faith_minorities"

				any_in_list = {
					variable = faith_minorities
	
					NOT = { this.var:faith = scope:councillor.faith }
				}
			}
			

			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_alive = yes
						has_variable = hold_court_8120_religion_block
					}
				}
				custom_tooltip = {
					text = hold_court_8120_conversion_tt
					NOT = { faith = scope:councillor_liege.var:hold_court_8120_religion_block }
				}
			}
			custom_description = {
				text = "is_protected_via_contract_self_or_liege"
				subject = holder
				NAND = { # Vassal Contract forbids meddling by liege
					exists = holder.liege
					holder = {
						OR = {
							AND = {
								liege = scope:councillor_liege
								is_ruler = yes
								is_independent_ruler = no
								vassal_contract_has_flag = religiously_protected
							}
							any_liege_or_above = {
								exists = liege
								liege = scope:councillor_liege
								is_ruler = yes
								is_independent_ruler = no
								vassal_contract_has_flag = religiously_protected
							}
						}
					}
				}
			}
			trigger_if = {
				limit = {	
					AND = {
						has_variable = cannot_be_converted_by_value
						var:cannot_be_converted_by_value = scope:councillor_liege		
					}
				}
				custom_tooltip = {
					text = promised_to_not_convert_county	
					NOR = {
						has_variable = cannot_be_converted_by_value
						var:cannot_be_converted_by_value = scope:councillor_liege	
					}
				}
			}
			# Unreformed Pagans do not tend to even try conversion of non-unreformed faiths unless zealous
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = {
							has_doctrine_parameter = unreformed
						}
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 50 }
					scope:county = {
						any_in_list = {
							variable = faith_minorities

							this.var:faith = { has_doctrine_parameter = unreformed }
							this.var:amount > 30
						}
					}
					scope:county = { # Always convert holy sites
						any_county_province = {
							barony = {
								is_holy_site_of = scope:councillor_liege.faith
							}
						}
					}
				}
			}
			
			# Ash'ari in Spain tend to not convert Muwhalladi often
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = faith:ashari
						capital_province ?= { geographical_region = world_europe_west_iberia }
						scope:county = {
							any_in_list = {
								variable = faith_minorities

								this.var:faith = faith:muwalladi
							}
						}
					}
					scope:county = {
						title_province = { geographical_region = world_europe_west_iberia }
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 50 }
					scope:county = { county_opinion <= -20 }
					scope:county = { # Always convert holy sites
						any_county_province = {
							barony = {
								is_holy_site_of = scope:councillor_liege.faith
							}
						}
					}
				}
			}
			# If a ruler has Jizya tax, they'll only convert the same *religious family* when ai_zeal is really high, they're converting unreformed pagans, counties in a kingdom with a Holy Site, or others of the same religion
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = {
							has_doctrine = tenet_tax_nonbelievers
						}
					}
					OR = {
						AND = {
							scope:councillor_liege.religion = { is_in_family = rf_pagan }
							scope:county = {
								any_in_list = {
									variable = faith_minorities

									this.var:faith.religion = { is_in_family = rf_pagan }
									this.var:amount > 30
								}
							}
						}
						AND = {
							scope:councillor_liege.religion = { is_in_family = rf_eastern }
							scope:county = {
								any_in_list = {
									variable = faith_minorities

									this.var:faith.religion = { is_in_family = rf_eastern }
									this.var:amount > 30
								}
							}
						}
						AND = {
							scope:councillor_liege.religion = { is_in_family = rf_abrahamic }
							scope:county = {
								any_in_list = {
									variable = faith_minorities

									this.var:faith.religion = { is_in_family = rf_abrahamic }
									this.var:amount > 30
								}
							}
						}
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 50 }
					scope:county.faith = { has_doctrine_parameter = unreformed }
					scope:county = {
						any_in_list = {
							variable = faith_minorities

							this.var:faith = { has_doctrine_parameter = unreformed }
							this.var:amount > 30
						}
					}
					scope:councillor_liege.faith = {
						any_holy_site = {
							county = {
								kingdom = scope:county.kingdom
							}
						}
					}
					#scope:county.religion = scope:councillor_liege.religion # Excluded, as tax nonbelievers actually works for different faiths within the same religion
					AND = { # Islamic heartlands, to help fend off encroaching faiths
						scope:councillor_liege.religion = religion:islam_religion
						scope:county.title_province = {
							geographical_region = islamic_heartlands
						}
					}
				}
			}
			# Struggle phases may sometimes restrict targets for involved characters.
			trigger_if = {
				# Give an exception for pre-existing conversions: these can take a while and it's not fair to lose years or decades of progress to a phase change.
				limit = {
					NOT = {
						scope:county = { is_target_of_council_task = task_conversion }
					}
				}
				NOT = {
					scope:councillor_liege = {
						custom_tooltip = {
							text = task_conversion.tt.forbidden.due_to_struggle_phase
							any_character_struggle = {
								involvement = involved
								is_struggle_parameter_active_secondary_county_trigger = {
									PARAMETER = county_conversion_disabled_for_involved_faiths_within_region
									COUNTY = scope:county
								}
							}
						}
					}
				}
			}
		}
	}

	on_start_task_county = {
		# Message for vassals
		scope:county = { save_scope_as = set_county }
		scope:councillor_liege = {
			if = {
				limit = {
					any_vassal = {
						has_vassal_stance = minority
					}
				}
				custom_tooltip = minority_disapproves_conversion
				hidden_effect = {
					every_vassal = {
						limit = {
							has_vassal_stance = minority
						}
						add_opinion = {
							target = scope:councillor_liege
							modifier = minority_disapproves_of_conversion_opinion
						}
					}
				}
			}
		}
	}

	on_cancel_task_county = {
		# Message for vassals
		trigger_event = {
			id = court_chaplain_task.8001
			days = 1 # To ensure it does not fire at the same time as the finish message (both cancel and finish are fired on_finish_task_county)
		}
	}

	on_finish_task_county = {
		scope:county.faith = { save_scope_as = old_faith }
		
		if = {
			limit = {
				scope:councillor = {
					has_council_position = councillor_court_chaplain
				}
			}
			scope:councillor = {
				start_default_task = yes
			}
		}

		# Struggle parameters
		scope:councillor_liege = {
			if = {
				limit = {
					any_character_struggle = {
						involvement = involved
						has_struggle_phase_parameter = piety_from_converting_county
					}
				}
				add_piety = medium_piety_gain
			}
		}
		# Message for vassals
		trigger_event = court_chaplain_task.8002
	}

	monthly_on_action = on_minority_system_faith_conversion

	ai_will_do = {
		value = 1000 # Always convert if possible

		if = {	#Unless you're a crypto-religionist.
			limit = {
				scope:councillor_liege = {
					any_secret = { secret_type = secret_crypto_religionist }
				}
			}
			multiply = 0
		}
	}
}